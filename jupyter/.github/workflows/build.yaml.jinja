name: Build Status

on:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - LICENSE
      - README.md
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: {% raw %}${{ github.workflow }}-${{ github.head_ref || github.run_id }}{% endraw %}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["{{python_version_primary}}"]
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - uses: actions-ext/python/setup@main
      with:
        version: {% raw %}${{ matrix.python-version }}{% endraw %}

    - uses: actions-ext/node/setup@main
      with:
        version: 20.x

    - name: Install dependencies
      run: make develop

    - name: Lint
      run: make lint
      if: matrix.os == 'ubuntu-latest'

    - name: Checks
      run: make checks
      if: matrix.os == 'ubuntu-latest'

    - name: Build
      run: make build

    - name: Test
      run: make coverage
      if: matrix.os == 'ubuntu-latest'

    - name: Upload test results (Python)
      uses: actions/upload-artifact@v4
      with:
        name: {% raw %}test-results-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.node-version }}{% endraw %}
        path: '**/junit.xml'
      if: {% raw %}${{ always() }}{% endraw %}

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: '**/junit.xml'
      if: matrix.os == 'ubuntu-latest'

    - name: Upload coverage
      uses: codecov/codecov-action@v5
      with:
        token: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}

    - name: Make dist
      run: make dist
      if: matrix.os == 'ubuntu-latest'

    - uses: actions/upload-artifact@v4
      with:
        name: {% raw %}dist-${{matrix.os}}{% endraw %}
        path: dist
      if: matrix.os == 'ubuntu-latest'

